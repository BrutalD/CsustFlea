package com.csustflea.dao.impl;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.stereotype.Component;

import com.csustflea.dao.GoodsDao;
import com.csustflea.model.Collection;
import com.csustflea.model.Goods;
import com.csustflea.model.PGoods;

@Component("goodsDao")
public class GoodsDaoImpl extends DaoSupport implements GoodsDao {

	public int getAllGoodsNumber(String hql) {
		Session session = this.getSession();
		int countAll = 0;
		try {
			countAll = session.createQuery(hql).list().size();
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			if (session != null) {
				session.close();
			}
		}
		return countAll;
	}

	public List<Goods> getAllGoods(int startIndex, int pageSize, String hql) {
		Session session = this.getSession();
		List<Goods> allGoods = null;
		try {
			allGoods = session.createQuery(hql).setFirstResult(startIndex)
					.setMaxResults(pageSize).list();
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			if (session != null)
				session.close();
		}
		return allGoods;
	}

	public void addGoods(Goods goods) {
		Session session = this.getSession();
		try {
			session.save(goods);
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			if (session != null)
				session.close();
		}
	}

	public Goods getGoodsById(String hql) {
		Goods goods = null;
		Session session = this.getSession();
		try {
			goods = (Goods) session.createQuery(hql).list().iterator().next();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (session != null)
				session.close();
		}
		return goods;
	}

	@Override
	public void CpGoodsInfo(Goods goods) {
		Session session = this.getSession();
		session.beginTransaction();
		session.save(goods);
		session.beginTransaction().commit();
		String hql = "from Goods g where g.gname = ?  and g.gprice = ? and g.gdescb = ? and g.gtype = ? and g.uid = ?";
		Query query = session.createQuery(hql);
		query.setParameter(0, goods.getGname());
		query.setParameter(1, goods.getGprice());
		query.setParameter(2, goods.getGdescb());
		query.setParameter(3, goods.getGtype());
		query.setParameter(4, goods.getUid());
		List<Goods> listgoods = query.list();
		Goods goodstemp = listgoods.get(0);
		HttpServletRequest request = ServletActionContext.getRequest();
		HttpSession session1 = request.getSession();
		session1.setAttribute("listgoodsinfo", goodstemp);
		session.close();
	}

	@Override
	public Goods CpGoodsPic(Goods goods) {
		HttpServletRequest request = ServletActionContext.getRequest();
		HttpSession session1 = request.getSession();
		Goods g=   (Goods) session1.getAttribute("listgoodsinfo");
		return g;
	}

	@Override
	public List<Goods> ListGoodsMan(int pagesize,int pageindex,int uid) {
		Session session = this.getSession();
		String hql = "from Goods g where g.uid = ?";
		Query query = session.createQuery(hql);
		query.setParameter(0, uid);
		List<Goods> g = query.setFirstResult(pageindex).setMaxResults(pagesize).list();
		session.close();
		return g;
	}
	
	@Override
	public List<Goods> ListPGoods(int pagesize,int pageindex,int uid) {
		Session session = this.getSession();
		String hql = "from PGoods pg where pg.uid = ?";
		Query query = session.createQuery(hql);
		query.setParameter(0, uid);
		List<Goods> g = query.setFirstResult(pageindex).setMaxResults(pagesize).list();
		session.close();
		return g;
	}

	@Override
	public List<Collection> ListCollection(int pagesize,int pageindex,int uid) {
		Session session = this.getSession();
		String hql = "from Collection c where c.uid = ?";
		Query query = session.createQuery(hql);
		query.setParameter(0, uid);
		List<Collection> collection = query.setFirstResult(pageindex).setMaxResults(pagesize).list();
		session.close();
		return collection;
	}

	@Override
	public List<PGoods> ListIndexPGoods(int pagesize, int pageindex) {
		Session session = this.getSession();
		String hql = "from PGoods";
		List<PGoods> pg = null;
		try {
			Query query = session.createQuery(hql);
			 pg = query.setFirstResult(pageindex).setMaxResults(pagesize).list();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (session != null)
				session.close();
		}
		return pg;
	}
	
	
	public List<PGoods> ListIndexsearch(int startIndex, int pageSize, String hql) {
		Session session = this.getSession();
		List<PGoods> allGoods = null;
		try {
			allGoods = session.createQuery(hql).setFirstResult(startIndex)
					.setMaxResults(pageSize).list();
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			if (session != null)
				session.close();
		}
		return allGoods;
	}
	
}
